c
I18n.t 'devise.sessions.signed_out'
page.has_content? 'You need to sign in or sign up before continuing.'
page.body
page
n
c
n
e
n
I18n.t 'devise.sessions.signed_in'
frame 0
page.has_content?('Signed in successfully')
page.has_content?('Signed in successfully fartly')
page.has_content?('Signed in successfully')
page.has_content?('Signed in')
page.has_content?
page.has_content
page.body
page
signin(user.email, user.password)
signin
c
json_parsed_response
response_body.to_json
JSON.parse(response_body).count
JSON.parse(response_body)
response_body
c
do_request(id: 1)
do_request
c
do_request
c
do_request.first
do_request.first[:request_body]
do_request.first['request_body']
do_request.first.keys
do_request.first['params']
do_request
c
response_body
c
do_request
response
status
response_body
response_headers
response.headers
request
c
@current_user
current_user
c
current_user
c
current_user
c
current_user
@user
current_user
current_account
c
pp page.body
page.body
page.content
c
frame 0
I18n.t 'devise.failure.not_found_in_database', authentication_keys: 'email'
I18n.t 'devise.failure.not_found_in_database'
page.content
frame 0
page.body
page
c
@list.items
c
@list.items
c
@list.items.count
@list.items
c
Item.destroy_all
Item.count
item
c
self
frame 0
yield
&block
locals
n
s
@list.items.count
@list
c
JSON.parse(list.to_json).except('user_id').to_json
JSON.parse(list.to_json).except('user_id')
JSON.parse(list.to_json)
list.to_json
list
frame 0
list
c
status
c
params
format
step
n
format.html
format
c
params
c
params
c
params
c
n
params
c
params
c
do_request(list: params)
do_request
params
c
params
c
params
c
params
c
raw_post
frame 0
response_body
frame 0
do_request(list: params.to_json)
do_request(list: params)
do_request(params.to_json)
do_request(params)
params
do_request(params)
do_request(paramss)
do_request(params)
params
params.to_json
params
c
request.headers
request
frame 0
list_params
params
c
params
c
params
c
JSON.parse(params)
JSON.pars(params)
params
c
params
list_params
lsit_params
params
c
params
c
step
params
c
JSON.parse(List.all.to_json).each{|a| a.delete('user_id')}
JSON.parse(List.all.to_json)
List.all.to_json
y List.all
List.all
List.all.to_h
List.all.to_hash
List.all.to_json
List.all.to_kson
List.all.except(:user_id).to_json
List.all.except(:user_id)
List.all
List.all.attributes
List.all.to_json
y List.all.to_json
List.all.to_json
response_body
params
c
n
params
c
params
aprams
c
params
c
params
c
params
c
item_params
@item
Item
n
params
c
params
c
do_request
list_id
request
requet
request_body
response_body
response
body
status
@request
!request
request
reuqest
params
c
params
c
var instance
var local
var locals
request_url
params
request
params
c
params
List.count
item_params
params
c
n
raw_post
n
frame 0
params.to_json
params
c
params
response_body
c
list_item_url(item, list_id: item.list_id)
list_item_url(item, list: item.list)
list_item_url(item, list: list.id)
